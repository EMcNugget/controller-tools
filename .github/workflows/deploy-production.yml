name: Build and Deploy Production
on:
  workflow_dispatch:
    inputs:
      build_number:
        description: 'Build number to deploy'
        required: true
        type: string
        default: ${{ vars.CURRENT_BUILD || '1.0' }}

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # Builds the Docker image, pushes it to the registry, and attests the build
  build:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: ${{ github.sha }}
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: |
            ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

  deploy-production:
    if: github.ref == 'refs/heads/main'
    name: Deploy to Production
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get current build number
        id: get_build
        run: |
          CURRENT=$(cat build.txt)
          echo "current_build=$CURRENT" >> $GITHUB_OUTPUT
          gh variable set CURRENT_BUILD --body "$CURRENT"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 'Docker Stack Deploy'
        uses: jtwebman/stack-deploy-action@proposed_registry_login_change
        env:
          IMAGE_TAG: ${{ inputs.build_number || steps.get_build.outputs.current_build }}
          DOMAIN: 'tools.zidartcc.org'
          APP_PORT: 3000
          APP_NAME: 'controller-tools'
          BUILD_NUMBER: ${{ inputs.build_number || steps.get_build.outputs.current_build }}
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          user: ${{ secrets.DEPLOY_USER }}
          ssh_key: ${{ secrets.DEPLOY_PRIVATE_KEY }}
          file: 'docker-compose.yaml'
          name: 'controller-tools'
          registry_auth: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
